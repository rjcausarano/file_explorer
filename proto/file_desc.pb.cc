// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: file_desc.proto
// Protobuf C++ Version: 5.29.3

#include "file_desc.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr File::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        children_{nullptr},
        is_dir_{false} {}

template <typename>
PROTOBUF_CONSTEXPR File::File(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileDefaultTypeInternal() {}
  union {
    File _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileDefaultTypeInternal _File_default_instance_;

inline constexpr Files::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : files_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Files::Files(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FilesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FilesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FilesDefaultTypeInternal() {}
  union {
    Files _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FilesDefaultTypeInternal _Files_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_file_5fdesc_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_file_5fdesc_2eproto = nullptr;
const ::uint32_t
    TableStruct_file_5fdesc_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::File, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::File, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::File, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::File, _impl_.is_dir_),
        PROTOBUF_FIELD_OFFSET(::File, _impl_.children_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Files, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Files, _impl_.files_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::File)},
        {14, -1, -1, sizeof(::Files)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_File_default_instance_._instance,
    &::_Files_default_instance_._instance,
};
const char descriptor_table_protodef_file_5fdesc_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017file_desc.proto\">\n\004File\022\014\n\004name\030\001 \001(\t\022"
    "\016\n\006is_dir\030\002 \001(\010\022\030\n\010children\030\003 \001(\0132\006.File"
    "s\"\035\n\005Files\022\024\n\005files\030\001 \003(\0132\005.Fileb\006proto3"
};
static ::absl::once_flag descriptor_table_file_5fdesc_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_file_5fdesc_2eproto = {
    false,
    false,
    120,
    descriptor_table_protodef_file_5fdesc_2eproto,
    "file_desc.proto",
    &descriptor_table_file_5fdesc_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_file_5fdesc_2eproto::offsets,
    file_level_enum_descriptors_file_5fdesc_2eproto,
    file_level_service_descriptors_file_5fdesc_2eproto,
};
// ===================================================================

class File::_Internal {
 public:
  using HasBits =
      decltype(std::declval<File>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(File, _impl_._has_bits_);
};

File::File(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:File)
}
inline PROTOBUF_NDEBUG_INLINE File::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::File& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

File::File(
    ::google::protobuf::Arena* arena,
    const File& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  File* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.children_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Files>(
                              arena, *from._impl_.children_)
                        : nullptr;
  _impl_.is_dir_ = from._impl_.is_dir_;

  // @@protoc_insertion_point(copy_constructor:File)
}
inline PROTOBUF_NDEBUG_INLINE File::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void File::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, children_),
           0,
           offsetof(Impl_, is_dir_) -
               offsetof(Impl_, children_) +
               sizeof(Impl_::is_dir_));
}
File::~File() {
  // @@protoc_insertion_point(destructor:File)
  SharedDtor(*this);
}
inline void File::SharedDtor(MessageLite& self) {
  File& this_ = static_cast<File&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  delete this_._impl_.children_;
  this_._impl_.~Impl_();
}

inline void* File::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) File(arena);
}
constexpr auto File::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(File),
                                            alignof(File));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull File::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_File_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &File::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<File>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &File::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<File>(), &File::ByteSizeLong,
            &File::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(File, _impl_._cached_size_),
        false,
    },
    &File::kDescriptorMethods,
    &descriptor_table_file_5fdesc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* File::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 17, 2> File::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(File, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::File>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.name_)}},
    // bool is_dir = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(File, _impl_.is_dir_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.is_dir_)}},
    // .Files children = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.children_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_dir = 2;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.is_dir_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .Files children = 3;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.children_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Files>()},
  }}, {{
    "\4\4\0\0\0\0\0\0"
    "File"
    "name"
  }},
};

PROTOBUF_NOINLINE void File::Clear() {
// @@protoc_insertion_point(message_clear_start:File)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.children_ != nullptr);
    _impl_.children_->Clear();
  }
  _impl_.is_dir_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* File::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const File& this_ = static_cast<const File&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* File::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const File& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:File)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "File.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool is_dir = 2;
          if (this_._internal_is_dir() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_is_dir(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .Files children = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.children_, this_._impl_.children_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:File)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t File::ByteSizeLong(const MessageLite& base) {
          const File& this_ = static_cast<const File&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t File::ByteSizeLong() const {
          const File& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:File)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
           {
            // .Files children = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.children_);
            }
          }
           {
            // bool is_dir = 2;
            if (this_._internal_is_dir() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void File::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<File*>(&to_msg);
  auto& from = static_cast<const File&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:File)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.children_ != nullptr);
    if (_this->_impl_.children_ == nullptr) {
      _this->_impl_.children_ =
          ::google::protobuf::Message::CopyConstruct<::Files>(arena, *from._impl_.children_);
    } else {
      _this->_impl_.children_->MergeFrom(*from._impl_.children_);
    }
  }
  if (from._internal_is_dir() != 0) {
    _this->_impl_.is_dir_ = from._impl_.is_dir_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void File::CopyFrom(const File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void File::InternalSwap(File* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(File, _impl_.is_dir_)
      + sizeof(File::_impl_.is_dir_)
      - PROTOBUF_FIELD_OFFSET(File, _impl_.children_)>(
          reinterpret_cast<char*>(&_impl_.children_),
          reinterpret_cast<char*>(&other->_impl_.children_));
}

::google::protobuf::Metadata File::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Files::_Internal {
 public:
};

Files::Files(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Files)
}
inline PROTOBUF_NDEBUG_INLINE Files::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Files& from_msg)
      : files_{visibility, arena, from.files_},
        _cached_size_{0} {}

Files::Files(
    ::google::protobuf::Arena* arena,
    const Files& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Files* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:Files)
}
inline PROTOBUF_NDEBUG_INLINE Files::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : files_{visibility, arena},
        _cached_size_{0} {}

inline void Files::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Files::~Files() {
  // @@protoc_insertion_point(destructor:Files)
  SharedDtor(*this);
}
inline void Files::SharedDtor(MessageLite& self) {
  Files& this_ = static_cast<Files&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Files::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Files(arena);
}
constexpr auto Files::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Files, _impl_.files_) +
          decltype(Files::_impl_.files_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Files), alignof(Files), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Files::PlacementNew_,
                                 sizeof(Files),
                                 alignof(Files));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Files::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Files_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Files::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Files>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Files::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Files>(), &Files::ByteSizeLong,
            &Files::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Files, _impl_._cached_size_),
        false,
    },
    &Files::kDescriptorMethods,
    &descriptor_table_file_5fdesc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Files::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Files::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Files>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .File files = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Files, _impl_.files_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .File files = 1;
    {PROTOBUF_FIELD_OFFSET(Files, _impl_.files_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::File>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Files::Clear() {
// @@protoc_insertion_point(message_clear_start:Files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.files_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Files::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Files& this_ = static_cast<const Files&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Files::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Files& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Files)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .File files = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_files_size());
               i < n; i++) {
            const auto& repfield = this_._internal_files().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Files)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Files::ByteSizeLong(const MessageLite& base) {
          const Files& this_ = static_cast<const Files&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Files::ByteSizeLong() const {
          const Files& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Files)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .File files = 1;
            {
              total_size += 1UL * this_._internal_files_size();
              for (const auto& msg : this_._internal_files()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Files::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Files*>(&to_msg);
  auto& from = static_cast<const Files&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Files)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_files()->MergeFrom(
      from._internal_files());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Files::CopyFrom(const Files& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Files)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Files::InternalSwap(Files* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.files_.InternalSwap(&other->_impl_.files_);
}

::google::protobuf::Metadata Files::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_file_5fdesc_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
